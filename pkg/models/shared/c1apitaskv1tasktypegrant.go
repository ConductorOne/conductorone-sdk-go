// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

// C1APITaskV1TaskTypeGrantOutcome - The outcome field.
type C1APITaskV1TaskTypeGrantOutcome string

const (
	C1APITaskV1TaskTypeGrantOutcomeGrantOutcomeUnspecified C1APITaskV1TaskTypeGrantOutcome = "GRANT_OUTCOME_UNSPECIFIED"
	C1APITaskV1TaskTypeGrantOutcomeGrantOutcomeGranted     C1APITaskV1TaskTypeGrantOutcome = "GRANT_OUTCOME_GRANTED"
	C1APITaskV1TaskTypeGrantOutcomeGrantOutcomeDenied      C1APITaskV1TaskTypeGrantOutcome = "GRANT_OUTCOME_DENIED"
	C1APITaskV1TaskTypeGrantOutcomeGrantOutcomeError       C1APITaskV1TaskTypeGrantOutcome = "GRANT_OUTCOME_ERROR"
	C1APITaskV1TaskTypeGrantOutcomeGrantOutcomeCancelled   C1APITaskV1TaskTypeGrantOutcome = "GRANT_OUTCOME_CANCELLED"
)

func (e C1APITaskV1TaskTypeGrantOutcome) ToPointer() *C1APITaskV1TaskTypeGrantOutcome {
	return &e
}

func (e *C1APITaskV1TaskTypeGrantOutcome) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "GRANT_OUTCOME_UNSPECIFIED":
		fallthrough
	case "GRANT_OUTCOME_GRANTED":
		fallthrough
	case "GRANT_OUTCOME_DENIED":
		fallthrough
	case "GRANT_OUTCOME_ERROR":
		fallthrough
	case "GRANT_OUTCOME_CANCELLED":
		*e = C1APITaskV1TaskTypeGrantOutcome(v)
		return nil
	default:
		return fmt.Errorf("invalid value for C1APITaskV1TaskTypeGrantOutcome: %v", v)
	}
}

// C1APITaskV1TaskTypeGrant - The TaskTypeGrant message.
type C1APITaskV1TaskTypeGrant struct {
	// The appEntitlementId field.
	AppEntitlementID *string `json:"appEntitlementId,omitempty"`
	// The appId field.
	AppID *string `json:"appId,omitempty"`
	// The appUserId field.
	AppUserID     *string `json:"appUserId,omitempty"`
	GrantDuration *string `json:"grantDuration,omitempty"`
	// The identityUserId field.
	IdentityUserID *string `json:"identityUserId,omitempty"`
	// The outcome field.
	Outcome     *C1APITaskV1TaskTypeGrantOutcome `json:"outcome,omitempty"`
	OutcomeTime *time.Time                       `json:"outcomeTime,omitempty"`
}
