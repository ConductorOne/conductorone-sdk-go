// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// C1APITaskV1ExternalRefExternalRefSource - The externalRefSource field.
type C1APITaskV1ExternalRefExternalRefSource string

const (
	C1APITaskV1ExternalRefExternalRefSourceUnspecified C1APITaskV1ExternalRefExternalRefSource = "UNSPECIFIED"
	C1APITaskV1ExternalRefExternalRefSourceJira        C1APITaskV1ExternalRefExternalRefSource = "JIRA"
)

func (e C1APITaskV1ExternalRefExternalRefSource) ToPointer() *C1APITaskV1ExternalRefExternalRefSource {
	return &e
}

func (e *C1APITaskV1ExternalRefExternalRefSource) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "UNSPECIFIED":
		fallthrough
	case "JIRA":
		*e = C1APITaskV1ExternalRefExternalRefSource(v)
		return nil
	default:
		return fmt.Errorf("invalid value for C1APITaskV1ExternalRefExternalRefSource: %v", v)
	}
}

// C1APITaskV1ExternalRef - The ExternalRef message.
type C1APITaskV1ExternalRef struct {
	// The externalRefSource field.
	ExternalRefSource *C1APITaskV1ExternalRefExternalRefSource `json:"externalRefSource,omitempty"`
	// The name field.
	Name *string `json:"name,omitempty"`
	// The url field.
	URL *string `json:"url,omitempty"`
}
